{
	"info": {
		"_postman_id": "6778dd63-61d5-4c44-9d50-c426645a6f0b",
		"name": "02_HW_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp_data = pm.response.json();\r",
							"let req_data = request.data;\r",
							"console.log(\"resp_name = \" + resp_data.name);\r",
							"console.log(\"resp_age = \" + resp_data.age);\r",
							"console.log(\"resp_salary_1000 = \" + resp_data.salary);\r",
							"console.log(\"resp_u_salary_4000 \" + resp_data.family.u_salary_1_5_year);\r",
							"pm.test(\"Name-resp\", function () {\r",
							"pm.expect(resp_data.name).to.eql(\"Inna\");\r",
							"});\r",
							"pm.test(\"Age-resp\", function () {\r",
							"pm.expect(resp_data.age).to.eql(\"31\");\r",
							"});\r",
							"pm.test(\"Salary-1000\", function () {\r",
							"pm.expect(resp_data.salary).to.eql(1000);\r",
							"});\r",
							"pm.test(\"Name=Req\", function () {\r",
							"pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"pm.test(\"Age=Req\", function () {\r",
							"pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"pm.test(\"Salary1000=Req\", function () {\r",
							"pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"console.log(resp_data.family);\r",
							"pm.test(\"Check_u_salary*4\", function () {\r",
							"pm.expect(Number(resp_data.family.u_salary_1_5_year)).to.eql+(req_data.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Inna",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"let resp_data = pm.response.json();\r",
							"let req = pm.request.url.query.toObject();\r",
							"console.log(\"resp_name = \" + resp_data.name);\r",
							"console.log(\"resp_age = \" + resp_data.age);\r",
							"console.log(\"resp_salary_1000 = \" + resp_data.salary);\r",
							"console.log(\"resp_salary*4 = \" + resp_data.family.u_salary_1_5_year);\r",
							"pm.test(\"Name Req\", function () {\r",
							"pm.expect(resp_data.name).to.eql(pm.request.url.query.get(\"name\"));\r",
							"});\r",
							"pm.test(\"Aqe Req\", function () {\r",
							"pm.expect(resp_data.age).to.eql(pm.request.url.query.get(\"age\"))\r",
							"});\r",
							"pm.test(\"Salary_1000\", function () {\r",
							"pm.expect(resp_data.salary).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"Salary*4\", function () {\r",
							"pm.expect(Number(resp_data.family.u_salary_1_5_year)).to.eql(req.salary*4);\r",
							"});\r",
							"console.log(resp_data.family);\r",
							"pm.test(\"Dog = name\", function () {\r",
							"pm.expect(resp_data.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Dog = age\", function () {\r",
							"pm.expect(resp_data.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"console.log(resp_data.family.pets.dog.name.includes(\"Luky\"));\r",
							"// expected output: true\r",
							"pm.test(\"Dog = age_4\", function () {\r",
							"pm.expect(resp_data.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Inna&age=31&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Inna"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"let resp_data = pm.response.json();\r",
							"let req = pm.request.url.query.toObject();\r",
							"pm.test(\"Name = Req\", function () {\r",
							"pm.expect(resp_data.name).to.eql(pm.request.url.query.get(\"name\"));\r",
							"});\r",
							"pm.test(\"Age = Req\", function () {\r",
							"pm.expect(resp_data.age).to.eql(+pm.request.url.query.get(\"age\"));\r",
							"});\r",
							"console.log(+req.salary);\r",
							"console.log(resp_data.salary);\r",
							"console.log(\"Sal_1000 = \" + resp_data.salary[0]);\r",
							"console.log(\"Sal_2000 = \" + resp_data.salary[1]);\r",
							"console.log(\"Sal_3000 = \" + resp_data.salary[2]);\r",
							"console.log(resp_data.salary[0]);\r",
							"console.log(resp_data.salary[1]);\r",
							"console.log(resp_data.salary[2]);\r",
							"let resp_salary_1000 = + resp_data.salary[0];\r",
							"let resp_salary_2000 = + resp_data.salary[1];\r",
							"let resp_salary_3000 = + resp_data.salary[2];\r",
							"pm.test(\"Sal_1000\", function () {\r",
							"pm.expect(resp_data.salary[0]).to.eql+(req.salary);\r",
							"});\r",
							"pm.test(\"Sal_2000\", function () {\r",
							"pm.expect(resp_data.salary[1]).to.eql+(req.salary*2);\r",
							"});\r",
							"pm.test(\"Sal_3000\", function () {\r",
							"pm.expect(resp_data.salary[2]).to.eql+(req.salary*3);\r",
							"});\r",
							"pm.environment.set(\"name_2\", req.name_2 );\r",
							"pm.environment.set(\"age_2\", req.age_2);\r",
							"pm.environment.set(\"salary_2\", req.salary_2);\r",
							"\r",
							"for(let sal in resp_data.salary) {\r",
							"    console.log(\"salary.\"+ sal+ \"=\" + resp_data.salary[sal]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Inna&age=31&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Inna"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp_data = pm.response.json();\r",
							"let req_data = request.data;\r",
							"pm.test(\"Param = start_qa_salary\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"Param = qa_salary_after_6_months 6 months\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"Param = qa_salary_after_12_months\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"Param = qa_salary_after_1.5_year\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"Param = qa_salary_after_3.5_years\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"Param respons = person\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"person\");\r",
							"});\r",
							"pm.test(\"start_qa_salary = resp and req\", function () {\r",
							"pm.expect(resp_data[\"person\"][\"start_qa_salary\"]).to.eql(req_data.salory);\r",
							"});\r",
							"pm.test(\"salary_after_6_months\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_6_months\"]).to.eql(req_data.salary*2);\r",
							"});\r",
							"pm.test(\"salary_after_12_months\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_12_months\"]).to.eql(req_data.salary*2.7);\r",
							"});\r",
							"pm.test(\"salary_after_1.5_year\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(req_data.salary*3.3);\r",
							"});\r",
							"pm.test(\"salary_after_3.5_years\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(req_data.salary*3.8);\r",
							"});\r",
							"pm.test(\"name = salary\", function () {\r",
							"pm.expect(+resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"pm.test(\"U-age = age\", function () {\r",
							"pm.expect(+resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"pm.test(\"u_salary_5_years\", function () {\r",
							"pm.expect(resp_data[\"person\"][\"u_salary_5_years\"]).to.eql(+req_data.salary*4.2);\r",
							"});\r",
							"let person={\r",
							"    u_age: 31,\r",
							"    u_name: [\r",
							"        \"Inna\",\r",
							"        1000,\r",
							"        31\r",
							"    ],\r",
							"    u_salary_5_years: 4200.0\r",
							"}\r",
							"for(let Inna in person) {\r",
							"    console.log(person[Inna]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body-string\", function () {\r",
							"    pm.expect(pm.response.text()).to.includes(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		}
	]
}